<UserControl x:Class="StarryEyes.Views.WindowParts.Primitives.Timeline"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:behaviors="clr-namespace:StarryEyes.Views.Behaviors"
             xmlns:controls="clr-namespace:StarryEyes.Views.Controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
             xmlns:helpers="clr-namespace:StarryEyes.Views.Utils"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
             xmlns:mbehaviors="clr-namespace:StarryEyes.Views.Messaging.Behaviors"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:tabs="clr-namespace:StarryEyes.ViewModels.Timelines.Tabs"
             xmlns:utils="clr-namespace:StarryEyes.Views.Utils"
             x:Name="userControl"
             FocusVisualStyle="{x:Null}"
             d:DataContext="{d:DesignInstance Type={x:Type tabs:TabViewModel}}"
             d:DesignHeight="300"
             d:DesignWidth="300"
             mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <utils:BooleanToVisibleConverter x:Key="BooleanToVisibleConverter" />
            <utils:BooleanToInvisibleConverter x:Key="BooleanToInvisibleConverter" />
            <DataTemplate x:Key="UserItemTemplate">
                <controls:LazyImage Width="20"
                                    Height="20"
                                    Cursor="Hand"
                                    DecodePixelWidth="20"
                                    RenderOptions.BitmapScalingMode="HighQuality"
                                    ToolTip="{Binding ScreenName,
                                                      Mode=OneTime}"
                                    UriSource="{Binding ProfileImageUri,
                                                        Mode=OneTime}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeftButtonDown">
                            <ei:CallMethodAction MethodName="OpenUserDetail" TargetObject="{Binding Mode=OneTime}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </controls:LazyImage>
            </DataTemplate>
            <DataTemplate x:Key="StatusItemTemplate">
                <Border x:Name="MainBorder"
                        Margin="0"
                        Background="#00FFFFFF"
                        Padding="0"
                        RenderTransformOrigin="0.5,1"
                        SnapsToDevicePixels="True">
                    <Border.ContextMenu>
                        <ContextMenu DataContext="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                            <MenuItem Header="返信(_M)" Visibility="{Binding IsSelected, Converter={StaticResource BooleanToInvisibleConverter}}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <ei:CallMethodAction MethodName="SendReplyOrDirectMessage" TargetObject="{Binding}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </MenuItem>
                            <MenuItem Header="選択ツイートすべてに返信(_M)" Visibility="{Binding IsSelected, Converter={StaticResource BooleanToVisibleConverter}}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <ei:CallMethodAction MethodName="ReplySelecteds" TargetObject="{Binding Parent}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </MenuItem>
                            <Separator />
                            <MenuItem Header="このツイートを選択(_S)" Visibility="{Binding IsSelected, Converter={StaticResource BooleanToInvisibleConverter}}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <ei:CallMethodAction MethodName="ToggleSelect" TargetObject="{Binding}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </MenuItem>
                            <MenuItem Header="選択を解除(_S)" Visibility="{Binding IsSelected, Converter={StaticResource BooleanToVisibleConverter}}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <ei:CallMethodAction MethodName="ToggleSelect" TargetObject="{Binding}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </MenuItem>
                            <MenuItem Header="選択ツイートの操作(_A)" Visibility="{Binding IsSelected, Converter={StaticResource BooleanToVisibleConverter}}">
                                <MenuItem Header="お気に入り登録(_F)" Visibility="{Binding IsSelected, Converter={StaticResource BooleanToVisibleConverter}}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <ei:CallMethodAction MethodName="FavoriteSelecteds" TargetObject="{Binding Parent}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </MenuItem>
                                <MenuItem Header="ユーザーを抽出(_E)" Visibility="{Binding IsSelected, Converter={StaticResource BooleanToVisibleConverter}}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <ei:CallMethodAction MethodName="ExtractSelecteds" TargetObject="{Binding Parent}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </MenuItem>
                                <MenuItem Header="すべて解除(_Z)" Visibility="{Binding IsSelected, Converter={StaticResource BooleanToVisibleConverter}}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <ei:CallMethodAction MethodName="DeselectAll" TargetObject="{Binding Parent}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </MenuItem>
                            </MenuItem>
                            <Separator />
                            <MenuItem Header="お気に入り登録(_F)" Visibility="{Binding CanFavoriteImmediate, Converter={StaticResource BooleanToVisibleConverter}}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <ei:CallMethodAction MethodName="ToggleFavoriteImmediate" TargetObject="{Binding}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </MenuItem>
                            <MenuItem Header="アカウントを選択してお気に入り登録(_V)" Visibility="{Binding CanFavorite, Converter={StaticResource BooleanToVisibleConverter}}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <ei:CallMethodAction MethodName="ToggleFavorite" TargetObject="{Binding}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </MenuItem>

                            <MenuItem Header="リツイート(_R)" Visibility="{Binding CanRetweetImmediate, Converter={StaticResource BooleanToVisibleConverter}}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <ei:CallMethodAction MethodName="ToggleRetweetImmediate" TargetObject="{Binding}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </MenuItem>
                            <MenuItem Header="アカウントを選択してリツイート(_W)" Visibility="{Binding CanRetweet, Converter={StaticResource BooleanToVisibleConverter}}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <ei:CallMethodAction MethodName="ToggleRetweet" TargetObject="{Binding}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </MenuItem>
                            <MenuItem Header="引用(_Q)">
                                <MenuItem Header="パーマリンクで引用(_L)">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <ei:CallMethodAction MethodName="QuotePermalink" TargetObject="{Binding}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </MenuItem>
                                <MenuItem Header="非公式RT(_Q)">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <ei:CallMethodAction MethodName="Quote" TargetObject="{Binding}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </MenuItem>
                            </MenuItem>
                            <Separator />

                            <MenuItem Header="このツイート(_T)">
                                <MenuItem Header="会話を開く(_C)">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <ei:CallMethodAction MethodName="ShowConversation" TargetObject="{Binding}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </MenuItem>
                                <Separator />
                                <MenuItem Header="本文をコピー(_B)">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <ei:CallMethodAction MethodName="CopyBody" TargetObject="{Binding}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </MenuItem>
                                <MenuItem Header="パーマリンクをコピー(_P)">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <ei:CallMethodAction MethodName="CopyPermalink" TargetObject="{Binding}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </MenuItem>
                                <MenuItem Header="STOT形式でコピー(_S)">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <ei:CallMethodAction MethodName="CopySTOT" TargetObject="{Binding}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </MenuItem>
                                <Separator />
                                <MenuItem Header="Webを開く(_W)">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <ei:CallMethodAction MethodName="OpenWeb" TargetObject="{Binding}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </MenuItem>
                                <MenuItem Header="Favstarを開く(_F)">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <ei:CallMethodAction MethodName="OpenFavstar" TargetObject="{Binding}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </MenuItem>
                                <!--
                                    <Separator />
                                    <MenuItem Header="Favstar トロフィーを授与(_T)">
                                    <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                    <ei:CallMethodAction MethodName="GiveFavstarTrophy" TargetObject="{Binding}" />
                                    </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    </MenuItem>
                                -->
                            </MenuItem>
                            <MenuItem Header="このユーザー(_U)">
                                <MenuItem Header="プロフィール(_P)">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <ei:CallMethodAction MethodName="ShowUserProfile" TargetObject="{Binding}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </MenuItem>
                                <MenuItem Header="ダイレクトメッセージ(_D)">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <ei:CallMethodAction MethodName="DirectMessage" TargetObject="{Binding}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </MenuItem>
                                <Separator />
                                <MenuItem Header="Twitterで見る(_T)">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <ei:CallMethodAction MethodName="OpenUserDetailOnTwitter" TargetObject="{Binding}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </MenuItem>
                                <MenuItem Header="Twilogで見る(_L)">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <ei:CallMethodAction MethodName="OpenUserTwilog" TargetObject="{Binding}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </MenuItem>
                                <MenuItem Header="Favstarで見る(_F)">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <ei:CallMethodAction MethodName="OpenUserFavstar" TargetObject="{Binding}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </MenuItem>
                                <Separator />
                                <MenuItem Header="スパムとして報告(_S)">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <ei:CallMethodAction MethodName="ReportAsSpam" TargetObject="{Binding}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </MenuItem>
                            </MenuItem>
                            <MenuItem Header="ミュート(_X)">
                                <MenuItem Header="ユーザーをミュート(_U)">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <ei:CallMethodAction MethodName="MuteUser" TargetObject="{Binding}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </MenuItem>
                                <MenuItem Header="クライアントをミュート(_C)">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <ei:CallMethodAction MethodName="MuteClient" TargetObject="{Binding}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </MenuItem>
                            </MenuItem>
                        </ContextMenu>
                    </Border.ContextMenu>
                    <Border.LayoutTransform>
                        <TransformGroup>
                            <ScaleTransform />
                            <SkewTransform />
                            <RotateTransform />
                            <TranslateTransform />
                        </TransformGroup>
                    </Border.LayoutTransform>
                    <Border.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform />
                            <SkewTransform />
                            <RotateTransform />
                            <TranslateTransform />
                        </TransformGroup>
                    </Border.RenderTransform>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseEnter">
                            <ei:GoToStateAction StateName="OnMouseOver" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="MouseLeave">
                            <ei:GoToStateAction StateName="Default" />
                        </i:EventTrigger>
                        <l:InteractionMessageTrigger Messenger="{Binding Messenger, Mode=OneTime}">
                            <mbehaviors:BringIntoViewInteractionMessageAction />
                        </l:InteractionMessageTrigger>
                        <ei:DataTrigger Binding="{Binding IsFocused, Mode=OneWay}" Value="True">
                            <ei:GoToStateAction StateName="Focused" />
                        </ei:DataTrigger>
                        <ei:DataTrigger Binding="{Binding IsFocused, Mode=OneWay}" Value="False">
                            <ei:GoToStateAction StateName="NotFocused" />
                        </ei:DataTrigger>
                    </i:Interaction.Triggers>
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="StatusSelection">
                            <VisualState x:Name="Selected">
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CheckBoxBorder" Storyboard.TargetProperty="(FrameworkElement.Width)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="24">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <ExponentialEase EasingMode="EaseOut" Exponent="10" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="checkBox" Storyboard.TargetProperty="(FrameworkElement.VerticalAlignment)">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static VerticalAlignment.Center}" />
                                    </ObjectAnimationUsingKeyFrames>
                                    <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="viewbox" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                        <EasingThicknessKeyFrame KeyTime="0:0:0.1" Value="0,0,6,0" />
                                    </ThicknessAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PseudoSpaceBorder" Storyboard.TargetProperty="(FrameworkElement.Width)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="24" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="NotSelected">
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CheckBoxBorder" Storyboard.TargetProperty="(FrameworkElement.Width)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <ExponentialEase EasingMode="EaseOut" Exponent="10" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PseudoSpaceBorder" Storyboard.TargetProperty="(FrameworkElement.Width)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                        </VisualStateGroup>
                        <VisualStateGroup x:Name="StatusMouseOver">
                            <VisualState x:Name="Default">
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ViaPanel" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <ExponentialEase EasingMode="EaseOut" Exponent="10" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ShortTime" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <ExponentialEase EasingMode="EaseOut" Exponent="10" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LongTime" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <ExponentialEase EasingMode="EaseOut" Exponent="10" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="stackPanel" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <ExponentialEase EasingMode="EaseOut" Exponent="10" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="OnMouseOver">
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ViaPanel" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <ExponentialEase EasingMode="EaseOut" Exponent="10" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LongTime" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <ExponentialEase EasingMode="EaseOut" Exponent="10" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ShortTime" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <ExponentialEase EasingMode="EaseOut" Exponent="10" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="stackPanel" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <ExponentialEase EasingMode="EaseOut" Exponent="10" />
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="OverrideBorder" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                        <EasingColorKeyFrame KeyTime="0" Value="#0A000000" />
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                        </VisualStateGroup>
                        <VisualStateGroup x:Name="StatusFocus">
                            <VisualState x:Name="NotFocused">
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InReplyToBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InReplyToBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Collapsed}" />
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InReplyToBorder" Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ActionQuickView" Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ActionQuickView" Storyboard.TargetProperty="(UIElement.Visibility)">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Visible}" />
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ActionQuickView" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ActionDetailView" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ActionDetailView" Storyboard.TargetProperty="(UIElement.Visibility)">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Collapsed}" />
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ActionDetailView" Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Focused">
                                <Storyboard>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackHighlightBorder" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                        <EasingColorKeyFrame KeyTime="0" Value="#0C000000" />
                                    </ColorAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InReplyToBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InReplyToBorder" Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InReplyToBorder" Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[0].(ScaleTransform.CenterY)">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InReplyToBorder" Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[1].(SkewTransform.CenterY)">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InReplyToBorder" Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[2].(RotateTransform.CenterY)">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ActionDetailView" Storyboard.TargetProperty="(UIElement.Visibility)">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ActionDetailView" Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ActionQuickView" Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ActionQuickView" Storyboard.TargetProperty="(UIElement.Visibility)">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Collapsed}" />
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ActionQuickView" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ActionDetailView" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InReplyToBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Border x:Name="BackHighlightBorder"
                            Margin="0"
                            Background="#00000000"
                            Padding="0">
                        <Border x:Name="OverrideBorder"
                                Margin="0"
                                Background="#00000000"
                                Padding="0">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseLeftButtonUp">
                                    <ei:CallMethodAction MethodName="ToggleFocus" TargetObject="{Binding Mode=OneTime}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <Grid Width="Auto"
                                  Height="Auto"
                                  Margin="8,10,0,10">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <i:Interaction.Triggers>
                                    <ei:DataTrigger Binding="{Binding Parent.IsSelectedStatusExisted, Mode=OneWay}" Value="True">
                                        <ei:GoToStateAction StateName="Selected" />
                                    </ei:DataTrigger>
                                    <ei:DataTrigger Binding="{Binding Parent.IsSelectedStatusExisted, Mode=OneWay}" Value="False">
                                        <ei:GoToStateAction StateName="NotSelected" />
                                    </ei:DataTrigger>
                                </i:Interaction.Triggers>
                                <Border x:Name="InReplyToBorder"
                                        Grid.RowSpan="1"
                                        Grid.Column="0"
                                        Grid.ColumnSpan="2"
                                        Width="Auto"
                                        Height="Auto"
                                        Margin="-8,-10,0,10"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Top"
                                        Background="#0F808080"
                                        Cursor="Hand"
                                        Visibility="Collapsed">
                                    <Border.LayoutTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Border.LayoutTransform>
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseLeftButtonDown">
                                            <ei:CallMethodAction MethodName="ShowConversation" TargetObject="{Binding Mode=OneTime}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <StackPanel Visibility="{Binding IsInReplyToExists, Converter={StaticResource BooleanToVisibleConverter}, Mode=OneWay}">
                                        <StackPanel Visibility="{Binding IsInReplyToLoaded, Converter={StaticResource BooleanToVisibleConverter}, Mode=OneWay}">
                                            <Grid Height="Auto"
                                                  Background="{x:Null}"
                                                  IsHitTestVisible="False"
                                                  Visibility="{Binding IsInReplyToAvailable,
                                                                       Converter={StaticResource BooleanToVisibleConverter},
                                                                       Mode=OneWay}">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="8" />
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="48" />
                                                    <ColumnDefinition />
                                                </Grid.ColumnDefinitions>
                                                <Border x:Name="PseudoSpaceBorder"
                                                        Grid.Column="1"
                                                        Width="0"
                                                        Height="Auto"
                                                        HorizontalAlignment="Left"
                                                        VerticalAlignment="Stretch" />
                                                <Border Grid.RowSpan="1"
                                                        Grid.Column="2"
                                                        Width="48"
                                                        Height="48"
                                                        Margin="0,7"
                                                        HorizontalAlignment="Right"
                                                        VerticalAlignment="Top"
                                                        Background="#19808080"
                                                        SnapsToDevicePixels="True">
                                                    <controls:LazyImage DecodePixelWidth="48"
                                                                        RenderOptions.BitmapScalingMode="HighQuality"
                                                                        UriSource="{Binding InReplyToUserImage,
                                                                                            Mode=OneWay}"
                                                                        UseLayoutRounding="True" />
                                                </Border>
                                                <StackPanel Grid.Column="3"
                                                            Width="Auto"
                                                            Height="Auto"
                                                            Margin="0,7"
                                                            HorizontalAlignment="Stretch"
                                                            VerticalAlignment="Top">
                                                    <DockPanel Width="Auto"
                                                               Height="Auto"
                                                               Margin="0,-2,0,3"
                                                               HorizontalAlignment="Stretch"
                                                               VerticalAlignment="Stretch"
                                                               LastChildFill="False">
                                                        <TextBlock Height="Auto"
                                                                   Margin="10,-4,2,0"
                                                                   VerticalAlignment="Bottom"
                                                                   FontFamily="Segoe UI Semibold"
                                                                   FontSize="13.333"
                                                                   Foreground="Gray"
                                                                   RenderTransformOrigin="0.5,0.5"
                                                                   Text="{Binding InReplyToUserScreenName,
                                                                                  FallbackValue=uSeR,
                                                                                  Mode=OneWay}"
                                                                   TextWrapping="NoWrap" />
                                                        <TextBlock Height="Auto"
                                                                   Margin="3,-4,3,0"
                                                                   VerticalAlignment="Bottom"
                                                                   FontFamily="Segoe UI Semilight"
                                                                   FontSize="12.667"
                                                                   Foreground="Gray"
                                                                   Text="{Binding InReplyToUserName,
                                                                                  FallbackValue=name,
                                                                                  Mode=OneWay}"
                                                                   TextWrapping="NoWrap" />
                                                    </DockPanel>
                                                    <TextBlock Margin="10,0"
                                                               Foreground="Gray"
                                                               Text="{Binding InReplyToBody,
                                                                              Mode=OneWay}"
                                                               TextWrapping="Wrap" />
                                                </StackPanel>
                                            </Grid>
                                            <Grid Margin="7" Visibility="{Binding IsInReplyToAvailable, Converter={StaticResource BooleanToInvisibleConverter}}">
                                                <TextBlock Foreground="DimGray" Text="返信先を受信できませんでした。ここをクリックすると個別に抽出できます。" />
                                            </Grid>
                                        </StackPanel>
                                        <Grid Margin="7" Visibility="{Binding IsInReplyToLoading, Converter={StaticResource BooleanToVisibleConverter}}">
                                            <Controls:MetroProgressBar Height="9"
                                                                       HorizontalAlignment="Stretch"
                                                                       VerticalAlignment="Center"
                                                                       IsIndeterminate="True" />
                                        </Grid>
                                    </StackPanel>
                                </Border>
                                <Grid Grid.Row="1"
                                      Width="Auto"
                                      Height="Auto"
                                      HorizontalAlignment="Stretch"
                                      VerticalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="10" />
                                        <ColumnDefinition Width="38" />
                                    </Grid.ColumnDefinitions>
                                    <Border Grid.RowSpan="1"
                                            Grid.Column="1"
                                            Grid.ColumnSpan="2"
                                            Width="48"
                                            Height="48"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Top"
                                            Background="#191BA1E2"
                                            SnapsToDevicePixels="True">
                                        <controls:LazyImage DecodePixelWidth="48"
                                                            RenderOptions.BitmapScalingMode="HighQuality"
                                                            UriSource="{Binding User.ProfileImageUri,
                                                                                Mode=OneTime}"
                                                            UseLayoutRounding="True">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="MouseLeftButtonDown">
                                                    <ei:CallMethodAction MethodName="ShowUserProfile" TargetObject="{Binding}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </controls:LazyImage>
                                    </Border>
                                    <Border x:Name="CheckBoxBorder"
                                            Grid.ColumnSpan="1"
                                            Width="0"
                                            Margin="0"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            Background="{x:Null}">
                                        <Viewbox x:Name="viewbox"
                                                 Width="18"
                                                 Height="18"
                                                 Margin="-2,0,6,0"
                                                 Stretch="Fill">
                                            <CheckBox x:Name="checkBox"
                                                      Width="16"
                                                      Height="16"
                                                      VerticalContentAlignment="Center"
                                                      Content=""
                                                      Focusable="False"
                                                      IsChecked="{Binding IsSelected,
                                                                          Mode=TwoWay}"
                                                      Padding="0" />
                                        </Viewbox>
                                    </Border>
                                    <Border x:Name="ClickerBorder"
                                            Grid.Row="0"
                                            Grid.RowSpan="1"
                                            Grid.Column="0"
                                            Grid.ColumnSpan="2"
                                            Width="Auto"
                                            Height="Auto"
                                            Margin="-8,-10,0,-10"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            Background="#00000000">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="MouseLeftButtonDown">
                                                <ei:CallMethodAction MethodName="ToggleSelect" TargetObject="{Binding Mode=OneTime}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Border>
                                </Grid>
                                <StackPanel Grid.Row="1"
                                            Grid.Column="1"
                                            Orientation="Vertical">

                                    <DockPanel Grid.RowSpan="1"
                                               Grid.Column="1"
                                               Grid.ColumnSpan="1"
                                               Width="Auto"
                                               Height="Auto"
                                               Margin="0,-2,0,3"
                                               HorizontalAlignment="Stretch"
                                               VerticalAlignment="Stretch"
                                               LastChildFill="False">
                                        <TextBlock x:Name="ScreenNameText"
                                                   Height="Auto"
                                                   Margin="10,-4,2,0"
                                                   VerticalAlignment="Bottom"
                                                   Cursor="Hand"
                                                   FontFamily="Segoe UI Semibold"
                                                   FontSize="13.333"
                                                   Foreground="#FF1BA1E2"
                                                   RenderTransformOrigin="0.5,0.5"
                                                   Text="{Binding User.ScreenName,
                                                                  FallbackValue=uSeR,
                                                                  Mode=OneTime}"
                                                   TextWrapping="NoWrap">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="MouseLeftButtonDown">
                                                    <ei:CallMethodAction MethodName="ShowUserProfile" TargetObject="{Binding}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </TextBlock>
                                        <TextBlock Height="Auto"
                                                   Margin="3,-4,3,0"
                                                   VerticalAlignment="Bottom"
                                                   FontFamily="Segoe UI Semilight"
                                                   FontSize="12.667"
                                                   Foreground="Gray"
                                                   IsHitTestVisible="False"
                                                   Text="{Binding User.Name,
                                                                  FallbackValue=name,
                                                                  Mode=OneTime}"
                                                   TextWrapping="NoWrap" />
                                        <StackPanel x:Name="ViaPanel"
                                                    Width="Auto"
                                                    Margin="0,0,8,0"
                                                    HorizontalAlignment="Right"
                                                    VerticalAlignment="Center"
                                                    DockPanel.Dock="Right"
                                                    Opacity="0"
                                                    Orientation="Horizontal"
                                                    Visibility="{Binding IsSourceVisible,
                                                                         Mode=OneTime,
                                                                         Converter={StaticResource BooleanToVisibleConverter}}">
                                            <TextBlock Margin="1,-1,1,0"
                                                       HorizontalAlignment="Left"
                                                       VerticalAlignment="Center"
                                                       FontFamily="Segoe UI Semilight"
                                                       FontSize="12"
                                                       Foreground="Gray"
                                                       IsHitTestVisible="False"
                                                       Text="via "
                                                       TextWrapping="NoWrap" />
                                            <TextBlock Margin="1,-1,1,0"
                                                       HorizontalAlignment="Left"
                                                       VerticalAlignment="Center"
                                                       FontFamily="Segoe UI Semilight"
                                                       FontSize="12"
                                                       Foreground="Gray"
                                                       IsHitTestVisible="False"
                                                       Text="{Binding SourceText,
                                                                      Mode=OneTime}"
                                                       TextWrapping="NoWrap"
                                                       Visibility="{Binding IsSourceIsLink,
                                                                            Mode=OneTime,
                                                                            Converter={StaticResource BooleanToInvisibleConverter}}" />
                                            <TextBlock Margin="1,-1,1,0"
                                                       HorizontalAlignment="Left"
                                                       VerticalAlignment="Center"
                                                       Cursor="Hand"
                                                       FontFamily="Segoe UI Semilight"
                                                       FontSize="12"
                                                       Foreground="Gray"
                                                       Text="{Binding SourceText,
                                                                      Mode=OneTime}"
                                                       TextWrapping="NoWrap"
                                                       Visibility="{Binding IsSourceIsLink,
                                                                            Mode=OneTime,
                                                                            Converter={StaticResource BooleanToVisibleConverter}}">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="MouseLeftButtonDown">
                                                        <ei:CallMethodAction MethodName="OpenSourceLink" TargetObject="{Binding Mode=OneTime}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </TextBlock>

                                        </StackPanel>
                                    </DockPanel>
                                    <Grid Height="Auto" Margin="10,3,2,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock VerticalAlignment="Top"
                                                   TextWrapping="Wrap"
                                                   helpers:TextBlockStylizer.LinkNavigationCommand="{Binding OpenLinkCommand,
                                                                                                             Mode=OneTime}"
                                                   helpers:TextBlockStylizer.TwitterStatus="{Binding Status,
                                                                                                     Mode=OneTime}">
                                            <i:Interaction.Behaviors>
                                                <behaviors:TextBlockDragSelectBehavior SelectedText="{Binding SelectedText, Mode=OneWayToSource}">
                                                    <behaviors:TextBlockDragSelectBehavior.SelectContextMenu>
                                                        <ContextMenu DataContext="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                                                            <MenuItem Header="クリップボードにコピー(_C)">
                                                                <i:Interaction.Triggers>
                                                                    <i:EventTrigger EventName="Click">
                                                                        <ei:CallMethodAction MethodName="CopyText" TargetObject="{Binding}" />
                                                                    </i:EventTrigger>
                                                                </i:Interaction.Triggers>
                                                            </MenuItem>
                                                            <MenuItem Header="ツイート入力欄にコピー(_I)">
                                                                <i:Interaction.Triggers>
                                                                    <i:EventTrigger EventName="Click">
                                                                        <ei:CallMethodAction MethodName="SetTextToInputBox" TargetObject="{Binding}" />
                                                                    </i:EventTrigger>
                                                                </i:Interaction.Triggers>
                                                            </MenuItem>
                                                            <Separator />
                                                            <MenuItem Header="Krile内のツイートを検索(_K)">
                                                                <i:Interaction.Triggers>
                                                                    <i:EventTrigger EventName="Click">
                                                                        <ei:CallMethodAction MethodName="FindOnKrile" TargetObject="{Binding}" />
                                                                    </i:EventTrigger>
                                                                </i:Interaction.Triggers>
                                                            </MenuItem>
                                                            <MenuItem Header="Twitterからツイートを検索(_T)">
                                                                <i:Interaction.Triggers>
                                                                    <i:EventTrigger EventName="Click">
                                                                        <ei:CallMethodAction MethodName="FindOnTwitter" TargetObject="{Binding}" />
                                                                    </i:EventTrigger>
                                                                </i:Interaction.Triggers>
                                                            </MenuItem>
                                                            <Separator />
                                                            <MenuItem Header="Googleで検索(_G)">
                                                                <i:Interaction.Triggers>
                                                                    <i:EventTrigger EventName="Click">
                                                                        <ei:CallMethodAction MethodName="FindOnGoogle" TargetObject="{Binding}" />
                                                                    </i:EventTrigger>
                                                                </i:Interaction.Triggers>
                                                            </MenuItem>
                                                            <Separator />
                                                            <MenuItem Header="キーワードをミュート(_M)">
                                                                <i:Interaction.Triggers>
                                                                    <i:EventTrigger EventName="Click">
                                                                        <ei:CallMethodAction MethodName="MuteKeyword" TargetObject="{Binding}" />
                                                                    </i:EventTrigger>
                                                                </i:Interaction.Triggers>
                                                            </MenuItem>
                                                        </ContextMenu>
                                                    </behaviors:TextBlockDragSelectBehavior.SelectContextMenu>
                                                </behaviors:TextBlockDragSelectBehavior>
                                            </i:Interaction.Behaviors>
                                        </TextBlock>
                                        <Border Grid.Column="1"
                                                Grid.ColumnSpan="1"
                                                Width="60"
                                                Height="60"
                                                Margin="8,0"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Top"
                                                Background="#FFF0F0F0"
                                                BorderBrush="#FF979797"
                                                BorderThickness="1"
                                                Cursor="Hand"
                                                Visibility="{Binding IsThumbnailAvailable,
                                                                     Mode=OneWay,
                                                                     Converter={StaticResource BooleanToVisibleConverter}}">
                                            <controls:LazyImage Cursor="Hand"
                                                                DecodePixelHeight="60"
                                                                RenderOptions.BitmapScalingMode="HighQuality"
                                                                Stretch="UniformToFill"
                                                                UriSource="{Binding ThumbnailImage,
                                                                                    Mode=OneWay}">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="MouseLeftButtonDown">
                                                        <ei:CallMethodAction MethodName="OpenThumbnailImage" TargetObject="{Binding Mode=OneTime}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </controls:LazyImage>
                                        </Border>
                                    </Grid>
                                    <Grid Grid.Row="3"
                                          Grid.Column="1"
                                          Margin="8,5,8,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock x:Name="ShortTime"
                                                   Grid.ColumnSpan="1"
                                                   Height="Auto"
                                                   Margin="2,0,4,0"
                                                   VerticalAlignment="Center"
                                                   FontFamily="Segoe UI Semilight"
                                                   FontSize="10.667"
                                                   Foreground="Gray"
                                                   IsHitTestVisible="False"
                                                   Text="{Binding CreatedAt,
                                                                  FallbackValue=0:00,
                                                                  StringFormat=H:mm,
                                                                  Mode=OneTime}"
                                                   TextWrapping="NoWrap" />
                                        <TextBlock x:Name="LongTime"
                                                   Grid.ColumnSpan="1"
                                                   Height="Auto"
                                                   Margin="2,0.906,4,0.906"
                                                   VerticalAlignment="Center"
                                                   Cursor="Hand"
                                                   FontFamily="Segoe UI Semilight"
                                                   FontSize="10.667"
                                                   Foreground="Gray"
                                                   Opacity="0"
                                                   Text="{Binding CreatedAt,
                                                                  Mode=OneTime,
                                                                  FallbackValue=0:00:00 - 0 Nil \'00,
                                                                  StringFormat=H:mm:ss - d MMM \\\'yy}"
                                                   TextWrapping="NoWrap">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="MouseLeftButtonDown">
                                                    <ei:CallMethodAction MethodName="OpenWeb" TargetObject="{Binding Mode=OneTime}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </TextBlock>
                                        <StackPanel x:Name="stackPanel"
                                                    Grid.Column="1"
                                                    Height="21"
                                                    HorizontalAlignment="Right"
                                                    VerticalAlignment="Center"
                                                    Opacity="0"
                                                    Orientation="Horizontal">
                                            <Button Width="32"
                                                    Height="22"
                                                    Margin="0,-2"
                                                    Style="{StaticResource MetroSquareUnfocusableFlatButton}"
                                                    ToolTip="ふぁぼってリツイート"
                                                    Visibility="{Binding CanFavoriteAndRetweet,
                                                                         Mode=OneWay,
                                                                         Converter={StaticResource BooleanToVisibleConverter}}">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="Click">
                                                        <ei:CallMethodAction MethodName="FavoriteAndRetweetImmediate" TargetObject="{Binding Mode=OneTime}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                                <Path Width="14.5"
                                                      Height="17"
                                                      Margin="-2"
                                                      Data="F1 M 753.421,588.661L 755.996,588.661L 756.841,586.293L 757.687,588.661L 757.768,588.661C 758.324,588.451 758.927,588.337 759.556,588.337C 761.011,588.337 762.323,588.949 763.248,589.929L 763.248,587.414L 764.633,588.799L 764.633,592.491L 760.94,592.491L 759.556,591.106L 762.136,591.106C 761.502,590.398 760.581,589.952 759.556,589.952C 759.052,589.952 758.573,590.06 758.14,590.254L 759.078,592.608L 756.841,591.292L 756.799,591.32C 756.445,591.786 756.206,592.344 756.125,592.952L 754.5,592.952C 754.592,591.925 754.991,590.986 755.603,590.227L 753.421,588.661 Z M 759.556,596.875C 761.311,596.875 762.761,595.569 762.987,593.875L 764.612,593.875C 764.379,596.463 762.204,598.491 759.556,598.491C 758.101,598.491 756.789,597.879 755.864,596.898L 755.864,599.414L 754.479,598.029L 754.479,594.337L 758.171,594.337L 759.556,595.722L 756.976,595.722C 757.61,596.43 758.531,596.875 759.556,596.875 Z "
                                                      Fill="Gray"
                                                      Stretch="Fill" />
                                            </Button>
                                            <Button Width="46"
                                                    Height="22"
                                                    Margin="0,-2"
                                                    Style="{StaticResource MetroSquareUnfocusableFlatButton}"
                                                    ToolTip="アカウントを選択してお気に入り登録"
                                                    Visibility="{Binding CanFavorite,
                                                                         Mode=OneTime,
                                                                         Converter={StaticResource BooleanToVisibleConverter}}">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="Click">
                                                        <ei:CallMethodAction MethodName="ToggleFavorite" TargetObject="{Binding Mode=OneTime}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                                <Path Width="5"
                                                      Height="4"
                                                      Margin="19,1,-13,0"
                                                      Data="F1 M 806.479,594.43L 808.229,591.399L 804.729,591.399L 806.479,594.43 Z "
                                                      Fill="Gray"
                                                      Stretch="Fill" />
                                            </Button>
                                            <Button Width="32"
                                                    Height="22"
                                                    Margin="-60,-2,0,-2"
                                                    Style="{StaticResource MetroSquareUnfocusableFlatButton}"
                                                    ToolTip="お気に入り登録"
                                                    Visibility="{Binding CanFavorite,
                                                                         Mode=OneTime,
                                                                         Converter={StaticResource BooleanToVisibleConverter}}">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="Click">
                                                        <ei:CallMethodAction MethodName="ToggleFavoriteImmediate" TargetObject="{Binding Mode=OneTime}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                                <Path x:Name="FavoriteStar"
                                                      Width="16"
                                                      Height="14.77"
                                                      Margin="-2"
                                                      Data="F1 M 771.886,590.845L 776.402,590.845L 777.886,586.691L 779.369,590.845L 783.886,590.845L 780.124,593.539L 781.809,597.768L 777.886,595.46L 774.424,597.768L 775.728,593.602L 771.886,590.845 Z "
                                                      Stretch="Fill">
                                                    <Path.Style>
                                                        <Style TargetType="{x:Type Path}">
                                                            <Setter Property="Fill" Value="Gray" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding IsFavorited, Mode=OneWay}" Value="True">
                                                                    <Setter Property="Fill" Value="#EF9608" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Path.Style>
                                                </Path>
                                            </Button>
                                            <Button Width="46"
                                                    Height="22"
                                                    Margin="0,-2"
                                                    Style="{StaticResource MetroSquareUnfocusableFlatButton}"
                                                    ToolTip="アカウントを選択してリツイート"
                                                    Visibility="{Binding CanRetweet,
                                                                         Mode=OneTime,
                                                                         Converter={StaticResource BooleanToVisibleConverter}}">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="Click">
                                                        <ei:CallMethodAction MethodName="ToggleRetweet" TargetObject="{Binding Mode=OneTime}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                                <Path Width="5"
                                                      Height="4"
                                                      Margin="19,1,-13,0"
                                                      Data="F1 M 806.479,594.43L 808.229,591.399L 804.729,591.399L 806.479,594.43 Z "
                                                      Fill="Gray"
                                                      Stretch="Fill" />
                                            </Button>
                                            <Button Width="32"
                                                    Height="22"
                                                    Margin="-60,-2,0,-2"
                                                    Style="{StaticResource MetroSquareUnfocusableFlatButton}"
                                                    ToolTip="リツイート"
                                                    Visibility="{Binding CanRetweet,
                                                                         Mode=OneTime,
                                                                         Converter={StaticResource BooleanToVisibleConverter}}">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="Click">
                                                        <ei:CallMethodAction MethodName="ToggleRetweetImmediate" TargetObject="{Binding Mode=OneTime}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                                <Path x:Name="RetweetCircle"
                                                      Width="13.54"
                                                      Height="16"
                                                      Margin="-2"
                                                      Data="F1 M 797.334,587.09C 798.788,587.09 800.1,587.702 801.026,588.682L 801.026,586.167L 802.41,587.551L 802.41,591.244L 798.718,591.244L 797.334,589.859L 799.914,589.859C 799.28,589.151 798.359,588.705 797.334,588.705C 795.578,588.705 794.128,590.012 793.903,591.705L 792.277,591.705C 792.511,589.117 794.685,587.09 797.334,587.09 Z M 797.334,595.628C 799.089,595.628 800.539,594.322 800.765,592.628L 802.39,592.628C 802.157,595.216 799.982,597.244 797.334,597.244C 795.879,597.244 794.567,596.632 793.641,595.651L 793.641,598.167L 792.257,596.782L 792.257,593.09L 795.949,593.09L 797.334,594.474L 794.753,594.474C 795.387,595.182 796.308,595.628 797.334,595.628 Z "
                                                      Stretch="Fill">
                                                    <Path.Style>
                                                        <Style TargetType="{x:Type Path}">
                                                            <Setter Property="Fill" Value="Gray" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding IsRetweeted, Mode=OneWay}" Value="True">
                                                                    <Setter Property="Fill" Value="#339933" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Path.Style>
                                                </Path>
                                            </Button>
                                            <Button Width="32"
                                                    Height="22"
                                                    Margin="0,-2"
                                                    Style="{StaticResource MetroSquareUnfocusableFlatButton}"
                                                    ToolTip="このツイートに返信">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="Click">
                                                        <ei:CallMethodAction MethodName="SendReplyOrDirectMessage" TargetObject="{Binding Mode=OneTime}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                                <Path Width="12"
                                                      Height="13"
                                                      Margin="-2"
                                                      Data="F1 M 825.467,595.138L 826.267,597.937L 823.067,595.138L 821.867,595.138L 821.867,587.937L 831.467,587.937L 831.467,595.138L 825.467,595.138 Z "
                                                      Fill="Gray"
                                                      Stretch="Fill" />
                                            </Button>
                                            <Button Width="32"
                                                    Height="22"
                                                    Margin="0,-2"
                                                    Style="{StaticResource MetroSquareUnfocusableFlatButton}"
                                                    ToolTip="このツイートを削除"
                                                    Visibility="{Binding CanDelete,
                                                                         Mode=OneWay,
                                                                         Converter={StaticResource BooleanToVisibleConverter}}">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="Click">
                                                        <ei:CallMethodAction MethodName="ConfirmDelete" TargetObject="{Binding Mode=OneTime}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                                <Path Width="10.89"
                                                      Height="14"
                                                      Margin="-2"
                                                      Data="F1 M 834.964,587.472L 842.787,587.472C 843.057,587.472 843.153,588.572 843.153,588.572L 834.598,588.572C 834.598,588.572 834.694,587.472 834.964,587.472 Z M 838.142,586.25L 839.609,586.25C 839.744,586.25 840.098,586.604 840.098,586.739C 840.098,586.874 839.744,587.228 839.609,587.228L 838.142,587.228C 838.007,587.228 837.653,586.874 837.653,586.739C 837.653,586.604 838.007,586.25 838.142,586.25 Z M 835.698,588.939L 842.053,588.939C 842.323,588.939 842.542,589.158 842.542,589.428L 842.053,596.761C 842.053,597.031 841.834,597.25 841.564,597.25L 836.187,597.25C 835.917,597.25 835.698,597.031 835.698,596.761L 835.209,589.428C 835.209,589.158 835.428,588.939 835.698,588.939 Z M 836.431,589.917L 836.553,596.272L 837.409,596.272L 837.287,589.917L 836.431,589.917 Z M 838.387,589.917L 838.387,596.272L 839.364,596.272L 839.364,589.917L 838.387,589.917 Z M 840.464,589.917L 840.342,596.272L 841.198,596.272L 841.32,589.917L 840.464,589.917 Z "
                                                      Fill="Gray"
                                                      Stretch="Fill" />
                                            </Button>
                                        </StackPanel>
                                    </Grid>
                                    <StackPanel x:Name="ActionQuickView"
                                                Height="Auto"
                                                Margin="7,0"
                                                Orientation="Horizontal">
                                        <StackPanel.LayoutTransform>
                                            <TransformGroup>
                                                <ScaleTransform />
                                                <SkewTransform />
                                                <RotateTransform />
                                                <TranslateTransform />
                                            </TransformGroup>
                                        </StackPanel.LayoutTransform>
                                        <StackPanel Width="Auto"
                                                    Margin="0,7,0,0"
                                                    Orientation="Horizontal"
                                                    Visibility="{Binding IsFavoritedUserExists,
                                                                         Mode=OneWay,
                                                                         Converter={StaticResource BooleanToVisibleConverter}}">
                                            <Path Width="Auto"
                                                  Height="11"
                                                  Margin="2,0"
                                                  VerticalAlignment="Center"
                                                  Data="F1 M 17.5,22.5L 22.3928,22.5L 24,18L 25.6071,22.5L 30.5,22.5L 26.4252,25.4193L 28.25,30L 24,27.5L 20.25,30L 21.6625,25.4875L 17.5,22.5 Z "
                                                  Fill="#FFF0A30A"
                                                  Stretch="Fill" />
                                            <TextBlock Margin="1,-1,5,0"
                                                       VerticalAlignment="Center"
                                                       FontFamily="Segoe UI Semilight"
                                                       Foreground="#FFF0A30A"
                                                       IsHitTestVisible="False"
                                                       Text="{Binding FavoriteCount,
                                                                      Mode=OneWay,
                                                                      FallbackValue=00}"
                                                       TextWrapping="Wrap" />
                                        </StackPanel>
                                        <StackPanel Width="Auto"
                                                    Margin="0,7,0,0"
                                                    Orientation="Horizontal"
                                                    Visibility="{Binding IsRetweetedUserExists,
                                                                         Mode=OneWay,
                                                                         Converter={StaticResource BooleanToVisibleConverter}}">
                                            <Path Width="Auto"
                                                  Height="12"
                                                  Margin="2,0"
                                                  VerticalAlignment="Center"
                                                  Data="F1 M 24,18.9231C 25.4548,18.9231 26.7667,19.535 27.6923,20.5154L 27.6923,18L 29.0769,19.3846L 29.0769,23.0769L 25.3846,23.0769L 24,21.6923L 26.5801,21.6923C 25.9463,20.9841 25.0252,20.5385 24,20.5385C 22.2447,20.5385 20.7946,21.8449 20.569,23.5385L 18.9438,23.5385C 19.177,20.9508 21.3517,18.9231 24,18.9231 Z M 24,27.4615C 25.7553,27.4615 27.2054,26.1551 27.431,24.4615L 29.0562,24.4615C 28.823,27.0492 26.6483,29.0769 24,29.0769C 22.5452,29.0769 21.2333,28.465 20.3077,27.4846L 20.3077,30L 18.9231,28.6154L 18.9231,24.9231L 22.6154,24.9231L 24,26.3077L 21.4199,26.3077C 22.0537,27.0159 22.9748,27.4615 24,27.4615 Z "
                                                  Fill="#FF008A00"
                                                  Stretch="Fill" />
                                            <TextBlock Margin="1,-1,0,0"
                                                       VerticalAlignment="Center"
                                                       FontFamily="Segoe UI Semilight"
                                                       Foreground="#FF008A00"
                                                       IsHitTestVisible="False"
                                                       Text="{Binding RetweetCount,
                                                                      Mode=OneWay,
                                                                      FallbackValue=00}"
                                                       TextWrapping="Wrap" />
                                        </StackPanel>
                                    </StackPanel>
                                    <StackPanel x:Name="ActionDetailView"
                                                Margin="7,0"
                                                Orientation="Vertical"
                                                Visibility="Collapsed">
                                        <StackPanel.LayoutTransform>
                                            <TransformGroup>
                                                <ScaleTransform />
                                                <SkewTransform />
                                                <RotateTransform />
                                                <TranslateTransform />
                                            </TransformGroup>
                                        </StackPanel.LayoutTransform>
                                        <DockPanel Height="Auto"
                                                   Margin="0,7,0,0"
                                                   LastChildFill="True"
                                                   Visibility="{Binding IsFavoritedUserExists,
                                                                        Mode=OneWay,
                                                                        Converter={StaticResource BooleanToVisibleConverter}}">
                                            <Path Width="12"
                                                  Height="11"
                                                  Margin="2,0"
                                                  VerticalAlignment="Center"
                                                  Data="F1 M 17.5,22.5L 22.3928,22.5L 24,18L 25.6071,22.5L 30.5,22.5L 26.4252,25.4193L 28.25,30L 24,27.5L 20.25,30L 21.6625,25.4875L 17.5,22.5 Z "
                                                  Fill="#FFF0A30A"
                                                  Stretch="Fill" />
                                            <TextBlock Margin="1,-1,5,0"
                                                       VerticalAlignment="Center"
                                                       FontFamily="Segoe UI Semilight"
                                                       Foreground="#FFF0A30A"
                                                       IsHitTestVisible="False"
                                                       Text="{Binding FavoriteCount,
                                                                      Mode=OneWay,
                                                                      FallbackValue=00}"
                                                       TextWrapping="Wrap" />
                                            <ItemsControl Height="Auto"
                                                          FocusVisualStyle="{x:Null}"
                                                          Focusable="False"
                                                          ItemTemplate="{StaticResource UserItemTemplate}"
                                                          ItemsSource="{Binding FavoritedUsers,
                                                                                Mode=OneTime}">
                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <WrapPanel />
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>
                                            </ItemsControl>
                                        </DockPanel>
                                        <DockPanel Height="Auto"
                                                   Margin="0,7,0,0"
                                                   LastChildFill="True"
                                                   Visibility="{Binding IsRetweetedUserExists,
                                                                        Mode=OneWay,
                                                                        Converter={StaticResource BooleanToVisibleConverter}}">
                                            <Path Width="10"
                                                  Height="12"
                                                  Margin="3,1"
                                                  VerticalAlignment="Center"
                                                  Data="F1 M 24,18.9231C 25.4548,18.9231 26.7667,19.535 27.6923,20.5154L 27.6923,18L 29.0769,19.3846L 29.0769,23.0769L 25.3846,23.0769L 24,21.6923L 26.5801,21.6923C 25.9463,20.9841 25.0252,20.5385 24,20.5385C 22.2447,20.5385 20.7946,21.8449 20.569,23.5385L 18.9438,23.5385C 19.177,20.9508 21.3517,18.9231 24,18.9231 Z M 24,27.4615C 25.7553,27.4615 27.2054,26.1551 27.431,24.4615L 29.0562,24.4615C 28.823,27.0492 26.6483,29.0769 24,29.0769C 22.5452,29.0769 21.2333,28.465 20.3077,27.4846L 20.3077,30L 18.9231,28.6154L 18.9231,24.9231L 22.6154,24.9231L 24,26.3077L 21.4199,26.3077C 22.0537,27.0159 22.9748,27.4615 24,27.4615 Z "
                                                  Fill="#FF008A00"
                                                  Stretch="Fill" />
                                            <TextBlock Margin="1,-2,5,0"
                                                       VerticalAlignment="Center"
                                                       FontFamily="Segoe UI Semilight"
                                                       Foreground="#FF008A00"
                                                       IsHitTestVisible="False"
                                                       Text="{Binding RetweetCount,
                                                                      Mode=OneWay,
                                                                      FallbackValue=00}"
                                                       TextWrapping="Wrap" />
                                            <ItemsControl Height="Auto"
                                                          FocusVisualStyle="{x:Null}"
                                                          Focusable="False"
                                                          ItemTemplate="{StaticResource UserItemTemplate}"
                                                          ItemsSource="{Binding RetweetedUsers,
                                                                                Mode=OneTime}">
                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <WrapPanel />
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>
                                            </ItemsControl>
                                        </DockPanel>
                                    </StackPanel>
                                    <DockPanel Margin="7,8,7,-1"
                                               Background="Transparent"
                                               Visibility="{Binding IsRetweet,
                                                                    Mode=OneTime,
                                                                    Converter={StaticResource BooleanToVisibleConverter}}">
                                        <Path Width="10"
                                              Height="12"
                                              Margin="3,1"
                                              Data="F1 M 24,18.9231C 25.4548,18.9231 26.7667,19.535 27.6923,20.5154L 27.6923,18L 29.0769,19.3846L 29.0769,23.0769L 25.3846,23.0769L 24,21.6923L 26.5801,21.6923C 25.9463,20.9841 25.0252,20.5385 24,20.5385C 22.2447,20.5385 20.7946,21.8449 20.569,23.5385L 18.9438,23.5385C 19.177,20.9508 21.3517,18.9231 24,18.9231 Z M 24,27.4615C 25.7553,27.4615 27.2054,26.1551 27.431,24.4615L 29.0562,24.4615C 28.823,27.0492 26.6483,29.0769 24,29.0769C 22.5452,29.0769 21.2333,28.465 20.3077,27.4846L 20.3077,30L 18.9231,28.6154L 18.9231,24.9231L 22.6154,24.9231L 24,26.3077L 21.4199,26.3077C 22.0537,27.0159 22.9748,27.4615 24,27.4615 Z "
                                              Fill="#FF008A00"
                                              Stretch="Fill" />
                                        <TextBlock Margin="1,-2,0,0"
                                                   HorizontalAlignment="Left"
                                                   VerticalAlignment="Center"
                                                   Cursor="Hand"
                                                   FontFamily="Segoe UI Semilight"
                                                   FontSize="12"
                                                   Foreground="#FF008A00"
                                                   Text="{Binding Retweeter.ScreenName,
                                                                  Mode=OneTime,
                                                                  FallbackValue=user}"
                                                   TextWrapping="NoWrap">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="MouseLeftButtonDown">
                                                    <ei:CallMethodAction MethodName="ShowRetweeterProfile" TargetObject="{Binding}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </TextBlock>
                                    </DockPanel>
                                </StackPanel>
                            </Grid>
                        </Border>
                    </Border>
                </Border>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding IsMyself, Mode=OneWay}" Value="True">
                        <Setter TargetName="MainBorder" Property="Background" Value="#161BA1E2" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsInReplyToMe, Mode=OneWay}" Value="True">
                        <Setter TargetName="MainBorder" Property="Background" Value="#16F0A30A" />
                        <Setter TargetName="ScreenNameText" Property="Foreground" Value="#FFFA6800" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsDirectMessage, Mode=OneTime}" Value="True">
                        <Setter TargetName="MainBorder" Property="Background" Value="#16A20025" />
                        <Setter TargetName="ScreenNameText" Property="Foreground" Value="#FFA20025" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsRetweet, Mode=OneTime}" Value="True">
                        <Setter TargetName="MainBorder" Property="Background" Value="#16008A00" />
                        <Setter TargetName="ScreenNameText" Property="Foreground" Value="#FF008A00" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
            <Style x:Key="FocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="2"
                                       SnapsToDevicePixels="true"
                                       Stroke="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}"
                                       StrokeDashArray="1 2"
                                       StrokeThickness="1" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF" />
            <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070" />
            <Style x:Key="OptionMarkFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="14,0,0,0"
                                       SnapsToDevicePixels="true"
                                       Stroke="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}"
                                       StrokeDashArray="1 2"
                                       StrokeThickness="1" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF" />
            <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF" />
            <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121" />
            <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6" />
            <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC" />
            <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070" />
            <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF" />
            <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD" />
            <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121" />
            <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121" />
            <Style TargetType="{x:Type CheckBox}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}" />
                <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}" />
                <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <Grid x:Name="templateRoot"
                                  Background="Transparent"
                                  SnapsToDevicePixels="True">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates" />
                                    <VisualStateGroup x:Name="FocusStates" />
                                    <VisualStateGroup x:Name="CheckStates" />
                                    <VisualStateGroup x:Name="ValidationStates" />
                                </VisualStateManager.VisualStateGroups>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Border x:Name="checkBoxBorder"
                                        Margin="1"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}">
                                    <Grid x:Name="markGrid">
                                        <Path x:Name="optionMark"
                                              Margin="1"
                                              Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z "
                                              Fill="{StaticResource OptionMark.Static.Glyph}"
                                              Opacity="0"
                                              Stretch="None" />
                                        <Rectangle x:Name="indeterminateMark"
                                                   Margin="2"
                                                   Fill="{StaticResource OptionMark.Static.Glyph}"
                                                   Opacity="0" />
                                    </Grid>
                                </Border>
                                <ContentPresenter x:Name="contentPresenter"
                                                  Grid.Column="1"
                                                  Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Focusable="False"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasContent" Value="true">
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                    <Setter Property="Padding" Value="4,-1,0,0" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource OptionMark.MouseOver.Background}" />
                                    <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource OptionMark.MouseOver.Border}" />
                                    <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource OptionMark.MouseOver.Glyph}" />
                                    <Setter TargetName="indeterminateMark" Property="Fill" Value="{StaticResource OptionMark.MouseOver.Glyph}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource OptionMark.Disabled.Background}" />
                                    <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource OptionMark.Disabled.Border}" />
                                    <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource OptionMark.Disabled.Glyph}" />
                                    <Setter TargetName="indeterminateMark" Property="Fill" Value="{StaticResource OptionMark.Disabled.Glyph}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource OptionMark.Pressed.Background}" />
                                    <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource OptionMark.Pressed.Border}" />
                                    <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource OptionMark.Pressed.Glyph}" />
                                    <Setter TargetName="indeterminateMark" Property="Fill" Value="{StaticResource OptionMark.Pressed.Glyph}" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter TargetName="optionMark" Property="Opacity" Value="1" />
                                    <Setter TargetName="indeterminateMark" Property="Opacity" Value="0" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="{x:Null}">
                                    <Setter TargetName="optionMark" Property="Opacity" Value="0" />
                                    <Setter TargetName="indeterminateMark" Property="Opacity" Value="1" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <i:Interaction.Triggers>
        <ei:DataTrigger Binding="{Binding IsSelectedStatusExisted}" Value="True">
            <ei:GoToStateAction StateName="Open" TargetObject="{Binding ElementName=userControl}" />
        </ei:DataTrigger>
        <ei:DataTrigger Binding="{Binding IsSelectedStatusExisted}" Value="False">
            <ei:GoToStateAction StateName="Close" TargetObject="{Binding ElementName=userControl}" />
        </ei:DataTrigger>
    </i:Interaction.Triggers>
    <DockPanel>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="StatusesActionBar">
                <VisualState x:Name="Close">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="multiOperationBlock" Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="0:0:0.2">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="multiOperationBlock" Storyboard.TargetProperty="(FrameworkElement.Height)">
                            <EasingDoubleKeyFrame KeyTime="0" Value="40">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <ExponentialEase EasingMode="EaseOut" Exponent="10" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <ExponentialEase EasingMode="EaseOut" Exponent="10" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="Open">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="multiOperationBlock" Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                            <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}" />
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="multiOperationBlock" Storyboard.TargetProperty="(FrameworkElement.Height)">
                            <EasingDoubleKeyFrame KeyTime="0" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <ExponentialEase EasingMode="EaseOut" Exponent="10" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="40">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <ExponentialEase EasingMode="EaseOut" Exponent="10" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Border x:Name="loadingBlock"
                VerticalAlignment="Top"
                DockPanel.Dock="Top"
                Visibility="{Binding IsLoading,
                                     Converter={StaticResource BooleanToVisibleConverter}}">
            <StackPanel Margin="4"
                        HorizontalAlignment="Center"
                        Orientation="Horizontal">
                <Viewbox Width="20" Height="20">
                    <Controls:ProgressRing IsActive="True" />
                </Viewbox>
                <TextBlock Margin="4"
                           VerticalAlignment="Center"
                           Text="loading..." />
            </StackPanel>
        </Border>
        <Border x:Name="multiOperationBlock"
                Height="40"
                VerticalAlignment="Top"
                Background="#00FFFFFF"
                DockPanel.Dock="Bottom"
                Visibility="Collapsed">
            <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                <Button Width="32"
                        Height="32"
                        Margin="12,4"
                        Template="{DynamicResource MetroBlackCircleButtonTemplate}"
                        ToolTip="選択したユーザー全員に返信">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <ei:CallMethodAction MethodName="ReplySelecteds" TargetObject="{Binding Mode=OneWay}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Path Width="16"
                          Height="17"
                          Margin="0,2,0,0"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Data="F1 M 21,32L 23,39L 15,32L 12,32L 12,14L 36,14L 36,32L 21,32 Z "
                          Fill="#FF000000"
                          Stretch="Fill" />
                </Button>
                <Button Width="32"
                        Height="32"
                        Margin="12,4"
                        Template="{DynamicResource MetroBlackCircleButtonTemplate}"
                        ToolTip="選択したツイートをお気に入りに追加">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <ei:CallMethodAction MethodName="FavoriteSelecteds" TargetObject="{Binding Mode=OneWay}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Path Width="18"
                          Height="17"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Data="F1 M 19.1538,24.1539L 21.2308,24.1539L 21.2308,27.6154L 24.6923,27.6154L 24.6923,29.6923L 21.2308,29.6923L 21.2308,33.1539L 19.1538,33.1539L 19.1538,29.6923L 15.6923,29.6923L 15.6923,27.6154L 19.1538,27.6154L 19.1538,24.1539 Z M 15,22.0769L 21.7747,22.0769L 24,15.8462L 26.2253,22.0769L 33,22.0769L 27.358,26.119L 29.8846,32.4615L 25.3846,29.8145L 25.3846,26.9231L 21.9231,26.9231L 21.9231,23.4615L 18.4615,23.4616L 18.4615,24.5613L 15,22.0769 Z "
                          Fill="#FF000000"
                          Stretch="Fill" />
                </Button>
                <Button Width="32"
                        Height="32"
                        Margin="12,4"
                        Template="{DynamicResource MetroBlackCircleButtonTemplate}"
                        ToolTip="選択したユーザーを新しいタブに抽出">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <ei:CallMethodAction MethodName="ExtractSelecteds" TargetObject="{Binding Mode=OneWay}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Path Width="16"
                          Height="16"
                          Margin="2,0,0,2"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Data="F1 M 27,15L 33,15L 33,21L 30.75,23.25L 30.75,19.125L 22.5,27.375L 20.625,25.5L 28.875,17.25L 24.75,17.25L 27,15 Z M 15,18L 26.25,18L 24,20.25L 17.25,20.25L 17.25,30.75L 27.75,30.75L 27.75,24L 30,21.75L 30,33L 15,33L 15,18 Z "
                          Fill="#FF000000"
                          Stretch="Fill" />
                </Button>
                <Button Width="32"
                        Height="32"
                        Margin="12,4"
                        Template="{DynamicResource MetroBlackCircleButtonTemplate}"
                        ToolTip="選択をすべて解除">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <ei:CallMethodAction MethodName="DeselectAll" TargetObject="{Binding Mode=OneWay}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Path Width="14"
                          Height="14"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Data="F1 M 18.4,16L 24,21.6L 29.5999,16.0001L 31.9999,18.4001L 26.4,24L 32,29.6001L 29.6,32L 24,26.4L 18.3999,32L 16,29.6L 21.6,24L 16,18.4L 18.4,16 Z "
                          Fill="#FF000000"
                          Stretch="Fill" />
                </Button>
            </StackPanel>
        </Border>
        <ItemsControl FocusVisualStyle="{x:Null}"
                      Focusable="True"
                      InputMethod.IsInputMethodEnabled="False"
                      ItemTemplate="{StaticResource StatusItemTemplate}"
                      ItemsSource="{Binding Timeline,
                                            Mode=OneWay}"
                      VirtualizingPanel.IsVirtualizing="True"
                      VirtualizingPanel.ScrollUnit="Pixel"
                      VirtualizingPanel.VirtualizationMode="Recycling">
            <i:Interaction.Triggers>
                <l:InteractionMessageTrigger Messenger="{Binding Messenger, Mode=OneTime}">
                    <mbehaviors:ScrollIntoViewInteractionMessageAction />
                </l:InteractionMessageTrigger>
                <l:InteractionMessageTrigger Messenger="{Binding Messenger, Mode=OneTime}">
                    <mbehaviors:TaskDialogInteractionMessageAction />
                </l:InteractionMessageTrigger>
                <l:InteractionMessageTrigger MessageKey="SetFocus" Messenger="{Binding Messenger, Mode=OneWay}">
                    <l:SetFocusAction />
                </l:InteractionMessageTrigger>
                <i:EventTrigger EventName="MouseDown">
                    <l:SetFocusAction />
                    <ei:CallMethodAction MethodName="GotFocus" TargetObject="{Binding}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel Orientation="Vertical" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.Template>
                <ControlTemplate TargetType="{x:Type ItemsControl}">
                    <ScrollViewer CanContentScroll="True"
                                  Focusable="False"
                                  Style="{StaticResource TouchScrollViewerStyle}"
                                  VerticalScrollBarVisibility="Visible">
                        <i:Interaction.Behaviors>
                            <behaviors:TimelineTriggerBehavior IsMouseOver="{Binding IsMouseOver,
                                                                                     Mode=OneWayToSource}"
                                                               IsScrollOnBottom="{Binding IsScrollInBottom,
                                                                                          Mode=OneWayToSource}"
                                                               IsScrollOnTop="{Binding IsScrollInTop,
                                                                                       Mode=OneWayToSource}" />
                            <behaviors:TimelineScrollLockerBehavior IsScrollLockEnabled="{Binding IsScrollLock, Mode=OneWay}" ItemsSource="{Binding Timeline, Mode=OneWay}" />
                            <behaviors:SquaredScrollBehavior />
                        </i:Interaction.Behaviors>
                        <ItemsPresenter />
                    </ScrollViewer>
                </ControlTemplate>
            </ItemsControl.Template>
        </ItemsControl>
    </DockPanel>
</UserControl>
